# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by Django 3.2.23 on 2024-10-23 17:19

from functools import partial

from django.db import migrations

MODEL_NAMES = {
    "ClusterObject": "Service",
    "ServiceComponent": "Component",
    "HostProvider": "Provider",
}
REVERSE_MODEL_NAMES = {value: key for key, value in MODEL_NAMES.items()}


def update_roles(apps, schema_editor, names_map: dict):
    Role = apps.get_model("rbac", "Role")

    updated_roles = []
    for role in Role.objects.only("init_params").all():
        init_params = role.init_params
        if not isinstance(init_params, dict):
            continue

        if new_model_name := names_map.get(init_params.get("model")):
            init_params["model"] = new_model_name
            role.init_params = init_params
            updated_roles.append(role)

    Role.objects.bulk_update(objs=updated_roles, fields=["init_params"])


fix_roles = partial(update_roles, names_map=MODEL_NAMES)
revert_roles = partial(update_roles, names_map=REVERSE_MODEL_NAMES)


class Migration(migrations.Migration):
    dependencies = [
        ("rbac", "0015_make_admin_not_builtin"),
        ("cm", "0132_restore_FKs_after_models_renaming"),  # makes no sense without cm 0132 migration
    ]

    operations = [
        migrations.RunPython(code=fix_roles, reverse_code=revert_roles),
    ]
