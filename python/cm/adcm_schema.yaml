---
# Main config.yaml object should be a list of Objects
root:
  match: list
  item: object

###############################################################################
#                             O B J E C T S
###############################################################################
# There are a number of object types: cluster, provider, host and service
# All of them has the same structure but with small difference

object:
  match: dict_key_selection
  selector: type
  variants:
    cluster: cluster_object
    service: service_object
    host: host_object
    provider: provider_object
    adcm: adcm_object

common_object: &common_object
  match: dict
  items: &common_object_items
    type: string
    name: string
    version: version_rule
    display_name: string
    description: string
    edition: string
    license: string
    adcm_min_version: version_rule
    config: config_obj
    actions: actions_dict
    venv: string
    flag_autogeneration: flag_autogeneration_object
  required_items:
    - type
    - name
    - version

flag_autogeneration_object:
  match: dict
  items:
    enable_outdated_config: boolean

service_object:
  <<: *common_object
  items:
    <<: *common_object_items
    import: import_dict
    export: export
    shared: boolean
    components: components_dict
    required: boolean
    requires: service_req_list
    monitoring: monitoring
    config_group_customization: boolean

cluster_object:
  <<: *common_object
  items:
    <<: *common_object_items
    upgrade: cluster_upgrade_list
    import: import_dict
    export: export
    config_group_customization: boolean
    allow_maintenance_mode: boolean

host_object:
  <<: *common_object
  items:
    <<: *common_object_items

provider_object:
  <<: *common_object
  items:
    <<: *common_object_items
    upgrade: provider_upgrade_list
    config_group_customization: boolean

adcm_object:
  <<: *common_object
  items:
    <<: *common_object_items
    upgrade: provider_upgrade_list

export:
  match: one_of
  variants:
    - string
    - list_of_string

monitoring:
  match: set
  variants:
    - active
    - passive

# Components
components_dict:
  match: dict
  default_item: component_item

component_item:
  match: one_of
  variants:
    - none
    - component_dict

component_dict:
  match: dict
  items:
    display_name: string
    description: string
    monitoring: monitoring
    constraint: constraint_list
    bound_to: bound_dict
    params: json
    requires: comp_req_list
    config: config_obj
    actions: actions_dict
    config_group_customization: boolean
    flag_autogeneration: flag_autogeneration_object
    venv: string

comp_req_list:
  match: list
  item: comp_req_item

service_req_list:
  match: list
  item: service_req_item

comp_req_item:
  match: dict
  items:
    service: string
    component: string

service_req_item:
  match: dict
  items:
    service: string
    component: string
  required_items:
    - service

constraint_list:
  match: list
  item: constraint_list_item

constraint_list_item:
  match: one_of
  variants:
    - integer
    - constraint_variants

constraint_variants:
  match: set
  variants:
    - "+"
    - odd

bound_dict:
  match: dict
  items:
    service: string
    component: string
  required_items:
    - service
    - component

version_rule:
  match: one_of
  variants:
    - integer
    - string
    - float

ansible_options:
  match: dict
  items:
    unsafe: boolean

# Upgrade Block
cluster_upgrade_list:
  match: list
  item: cluster_upgrade_obj

provider_upgrade_list:
  match: list
  item: provider_upgrade_obj

upgrade_obj: &common_upgrade_object
  match: dict
  items: &common_upgrade_object_items
    name: version_rule
    display_name: string
    description: string
    versions: version_dict
    states: states_dict
    from_edition: any_or_list
    scripts: upgrade_task_list
    masking: action_masking_or_none
    on_fail: post_action
    on_success: post_action
    venv: string
    ui_options: json
    config: config_obj

  required_items:
    - name
    - versions

provider_upgrade_obj:
  <<: *common_upgrade_object
  items:
    <<: *common_upgrade_object_items

cluster_upgrade_obj:
  <<: *common_upgrade_object
  items:
    <<: *common_upgrade_object_items
    hc_acl: action_hc_acl_list

upgrade_task_list:
  match: list
  item: upgrade_task_action

upgrade_task_action:
  match: dict
  items:
    name: string
    script: string
    script_type: upgrade_script_type
    display_name: string
    params: json
    on_fail: post_action_or_string
  required_items:
    - name
    - script
    - script_type

upgrade_script_type:
  match: set
  variants:
    - internal
    - ansible

version_dict:
  match: dict
  items:
    min: version_rule
    max: version_rule
    min_strict: version_rule
    max_strict: version_rule

states_dict:
  match: dict
  items:
    available: any_or_list
    on_success: string
    on_fail: string

# Config block of object could be in two forms: dict or list
config_obj:
  match: one_of
  variants:
    - config_dict
    - config_list

## Config dict rules
config_dict:
  match: dict
  default_item: config_dict_obj

config_dict_obj:
  match: one_of
  variants:
    - config_dict_sub
    - config_dict_group

config_dict_group:
  match: dict
  default_item: config_dict_sub

config_dict_sub:
  match: dict_key_selection
  selector: type
  variants:
    boolean: config_dict_sub_boolean
    integer: config_dict_sub_integer
    float: config_dict_sub_float
    string: config_dict_sub_string_with_pattern_and_ansible_options
    password: config_dict_sub_string_with_pattern
    secrettext: config_dict_sub_string_with_pattern
    text: config_dict_sub_string_with_pattern_and_ansible_options
    file: config_dict_sub_string
    secretfile: config_dict_sub_string
    list: config_dict_sub_list
    map: config_dict_sub_map
    secretmap: config_dict_sub_map
    structure: config_dict_sub_structure
    json: config_dict_sub_json
    option: config_dict_sub_option
    variant: config_dict_sub_variant

## Common fields for config of dict type
config_dict_sub_common: &config_dict_sub_common
  match: dict
  items: &config_dict_sub_items
    type: string
    read_only: any_or_list
    writable: any_or_list
    required: boolean
    display_name: string
    description: string_or_none
    ui_options: json
    group_customization: boolean
  required_items:
    - type

config_dict_sub_boolean:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: boolean

config_dict_sub_integer:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    min: integer
    max: integer
    default: integer

config_dict_sub_float:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    min: number
    max: number
    default: number

config_dict_sub_string:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: string

config_dict_sub_string_with_pattern:
  <<: *config_dict_sub_common
  items: &config_dict_sub_items_with_pattern
    <<: *config_dict_sub_items
    default: string
    pattern: string

config_dict_sub_string_with_pattern_and_ansible_options:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items_with_pattern
    ansible_options: ansible_options

config_dict_sub_list:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: list_of_string

config_dict_sub_map:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: map_string_string

config_dict_sub_structure:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: json
    yspec: string
  required_items:
    - yspec

config_dict_sub_json:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    default: json

config_dict_sub_option:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    option: map_string_any
    default: option_type
  required_items:
    - option

config_dict_sub_variant:
  <<: *config_dict_sub_common
  items:
    <<: *config_dict_sub_items
    source: variant_source
    default: string

## Config list rules
config_list:
  match: list
  item: config_list_object

config_list_object:
  match: dict_key_selection
  selector: type
  variants:
    group: config_list_group
    boolean: config_list_boolean
    integer: config_list_integer
    float: config_list_float
    string: config_list_string_with_pattern
    password: config_list_string_with_pattern
    secrettext: config_list_string_with_pattern
    text: config_list_string_with_pattern
    file: config_list_string
    secretfile: config_list_string
    list: config_list_list
    map: config_list_map
    secretmap: config_list_map
    structure: config_list_structure
    variant: config_list_variant
    json: config_list_json
    option: config_list_option

## Common fields for config of list type
config_list_common: &config_list_common
  match: dict
  items: &config_list_items
    <<: *config_dict_sub_items
    name: string
  required_items:
   - type
   - name

config_list_group:
  match: dict
  items:
    <<: *config_list_items
    subs: config_list_sub_list
    activatable: boolean
    active: boolean
  required_items:
    - name
    - type
    - subs

config_list_sub_list:
  match: list
  item: config_sub_list_object

config_sub_list_object:
  match: dict_key_selection
  selector: type
  variants:
    boolean: config_list_boolean
    integer: config_list_integer
    float: config_list_float
    string: config_list_string_with_pattern_and_ansible_options
    password: config_list_string_with_pattern
    secrettext: config_list_string_with_pattern
    text: config_list_string_with_pattern_and_ansible_options
    file: config_list_string
    secretfile: config_list_string
    list: config_list_list
    map: config_list_map
    secretmap: config_list_map
    structure: config_list_structure
    variant: config_list_variant
    json: config_list_json
    option: config_list_option

config_list_boolean:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: boolean

config_list_string:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: string

config_list_string_with_pattern:
  <<: *config_list_common
  items: &config_list_items_with_pattern
    <<: *config_list_items
    default: string
    pattern: string

config_list_string_with_pattern_and_ansible_options:
  <<: *config_list_common
  items:
    <<: *config_list_items_with_pattern
    ansible_options: ansible_options



config_list_integer:
  <<: *config_list_common
  items:
    <<: *config_list_items
    min: integer
    max: integer
    default: integer

config_list_float:
  <<: *config_list_common
  items:
    <<: *config_list_items
    min: number
    max: number
    default: number

config_list_list:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: list_of_string

config_list_json:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: json

config_list_option:
  <<: *config_list_common
  items:
    <<: *config_list_items
    option: map_string_any
    default: option_type
  required_items:
    - option

config_list_map:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: map_string_string

config_list_structure:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: json
    yspec: string
  required_items:
    - yspec

### Variant config type
config_list_variant:
  <<: *config_list_common
  items:
    <<: *config_list_items
    default: string
    source: variant_source
  required_items:
    - source

variant_common:
  match: dict
  items: &variant_items
    type: string
    strict: boolean

variant_source:
  match: dict_key_selection
  selector: type
  variants:
    inline: variant_inline
    config: variant_config
    builtin: variant_builtin

variant_inline:
  match: dict
  items:
    <<: *variant_items
    value: list_of_string
  required_items:
    - value

variant_config:
  match: dict
  items:
    <<: *variant_items
    name: string
  required_items:
    - name

variant_builtin:
  match: dict_key_selection
  selector: name
  variants:
    host: var_func_host
    host_in_cluster: var_func_host_in_cluster
    host_not_in_clusters: var_builtin_func
    service_in_cluster: var_builtin_func
    service_to_add: var_builtin_func

var_builtin_func:
  match: dict
  items:
    <<: *variant_items
    name: string

var_func_host_in_cluster:
  match: dict
  items:
    <<: *variant_items
    name: string
    args: var_func_host_in_cluster_args

var_func_host_in_cluster_args:
  match: dict
  items:
    service: string
    component: string
  required_items:
    - service

#### Variant config type host function solver
var_func_host:
  match: dict
  items:
    <<: *variant_items
    name: string
    args: vfh_predicate_item
  required_items:
    - name
    - args

vfh_args:
  match: one_of
  variants:
    - vfh_predicate_list
    - vfh_predicate_item

vfh_predicate_list:
  match: list
  item: vfh_predicate_item

vfh_predicate_item:
  match: dict_key_selection
  selector: predicate
  variants:
    and: vfh_predicate_and
    or: vfh_predicate_and
    in_cluster: vfh_predicate_in_cluster
    in_hc: vfh_predicate_in_cluster
    not_in_hc: vfh_predicate_in_cluster
    in_service: vfh_predicate_in_service
    not_in_service: vfh_predicate_in_service
    in_component: vfh_predicate_in_component
    not_in_component: vfh_predicate_in_component

vfh_predicate_and:
  match: dict
  items:
    predicate: vfh_predicates
    args: vfh_predicate_list
  required_items:
    - predicate
    - args

vfh_predicate_in_cluster:
  match: dict
  items:
    predicate: vfh_predicates
    args: none
  required_items:
    - predicate
    - args

vfh_predicate_in_service:
  match: dict
  items:
    predicate: vfh_predicates
    args: vfh_in_service_args
  required_items:
    - predicate
    - args

vfh_in_service_args:
  match: dict
  items:
    service: string
  required_items:
    - service

vfh_predicate_in_component:
  match: dict
  items:
    predicate: vfh_predicates
    args: vfh_in_component_args
  required_items:
    - predicate
    - args

vfh_in_component_args:
  match: dict
  items:
    service: string
    component: string
  required_items:
    - service
    - component

vfh_predicates:
  match: set
  variants:
    - and
    - or
    - in_service
    - in_component
    - in_cluster
    - in_hc
    - not_in_hc
    - not_in_service
    - not_in_component

# Imports
import_dict:
  match: dict
  default_item: import_dict_item

import_dict_item:
  match: dict
  items:
    versions: version_dict
    required: boolean
    multibind: boolean
    default: list_of_string

# Actions. Actions could be in two forms: job or task
actions_dict:
  match: dict
  default_item: action_item

action_item:
  match: dict_key_selection
  selector: type
  variants:
    job: action_job_dict
    task: action_task_dict

action_task_dict:
  match: one_of
  variants:
    - action_task_dict_scripts_plain
    - action_task_dict_scripts_jinja

common_action:
  match: dict
  items: &common_action_items
    type: string
    display_name: string
    description: string
    params: json
    ui_options: json
    allow_to_terminate: boolean
    partial_execution: boolean
    host_action: boolean
    allow_for_action_host_group: boolean
    log_files: list_of_string
    states: action_states_dict
    masking: action_masking_or_none
    on_fail: post_action
    on_success: post_action
    hc_acl: action_hc_acl_list
    venv: string
    allow_in_maintenance_mode: boolean
    config: config_obj
    config_jinja: string

## Task action
action_task_dict_scripts_plain:
  match: dict
  items:
    <<: *common_action_items
    scripts: task_list
  required_items:
    - type
    - scripts

action_task_dict_scripts_jinja:
  match: dict
  items:
    <<: *common_action_items
    scripts_jinja: string
  required_items:
    - type
    - scripts_jinja

task_list:
  match: list
  item: task_action

task_action:
  match: dict
  items:
    name: string
    script: string
    script_type: action_script_type
    display_name: string
    params: json
    on_fail: post_action_or_string
    allow_to_terminate: boolean
  required_items:
    - name
    - script
    - script_type

## Job action
action_job_dict:
  match: dict
  items:
    <<: *common_action_items
    script_type: action_script_type
    script: string
  required_items:
    - type
    - script_type
    - script

action_hc_acl_list:
  match: list
  item: action_hc_acl_dict

action_hc_acl_dict:
  match: dict
  items:
    service: string
    component: string
    action: hc_acl_action
  required_items:
    - component
    - action

hc_acl_action:
  match: set
  variants:
    - add
    - remove

action_script_type:
  match: set
  variants:
    - ansible
    - internal
    - python

action_states_dict:
  match: dict
  items:
    on_success: string
    on_fail: string
    available: any_or_list
  required_items:
    - available

action_masking_or_none:
  match: one_of
  variants:
    - action_masking
    - none

action_masking:
  match: dict
  items:
    state: availability_set_or_none
    multi_state: availability_set_or_none

availability_set_or_none:
  match: one_of
  variants:
    - availability_set
    - unavailability_set
    - none

availability_set:
  match: dict
  items:
    available: any_or_list

unavailability_set:
  match: dict
  items:
    unavailable: any_or_list

post_action_or_string:
  match: one_of
  variants:
    - string
    - post_action

post_action:
  match: dict
  items:
    state: string
    multi_state: multi_state_set

multi_state_set:
  match: dict
  items:
    set: list_of_string
    unset: list_of_string

# Common types
list_of_string:
  match: list
  item: string

list_of_any:
  match: list
  item: base_type

map_string_string:
  match: dict
  default_item: string

map_string_any:
  match: dict
  default_item: option_type

boolean:
  match: bool

string:
  match: string

integer:
  match: int

float:
  match: float

none:
  match: none

dict:
  match: dict

json:
  match: any

string_or_none:
  match: one_of
  variants:
    - string
    - none

any_or_list:
  match: one_of
  variants:
    - list_of_string
    - literally_any_string

literally_any_string:
  match: set
  variants:
    - any

number:
  match: one_of
  variants:
    - integer
    - float

base_type:
  match: one_of
  variants:
    - boolean
    - string
    - integer
    - float

option_type:
  match: one_of
  variants:
    - string
    - integer
    - float
